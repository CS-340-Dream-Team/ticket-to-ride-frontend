$color-dark-background: #303030;
$color-dark-background-accent: #6D6D6D;
$color-light-background: #FEFEFE;
$color-light-accent: #484848;
$color-dark-text: rgba(0, 0, 0, 0.54);
$color-light-text: #E1E1E1;

$color-purple: #5700AF;
$color-white: #FEFEFE;
$color-blue: #001895;
$color-yellow: #CA9E03;
$color-orange: #CF5904;
$color-black: #161616;
$color-red: #8D0000;
$color-green: #09740D;

/// Gives a elevation depth effect.
/// @param {Number} $depth - depth level (between 1 and 5)
/// @link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
/// @requires {function} top-shadow
/// @requires {function} bottom-shadow
@mixin elevation($depth) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `elevation`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);  
  }
}

/// Computes a top-shadow for a elevation effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}

/// Computes a bottom-shadow for a elevation effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}